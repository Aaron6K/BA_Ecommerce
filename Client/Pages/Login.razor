@page "/login"
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<PageTitle>Login!</PageTitle>
<EditForm Model="user" OnValidSubmit="HandleLogon">
   <DataAnnotationsValidator></DataAnnotationsValidator>

   <div class="mb-3">
      <label for="email">Email</label>
      <InputText id="email" @bind-Value="user.Email" class="form-control"/>
      <ValidationMessage For="@(()=>user.Email)" />
   </div>
   <div class="mb3">
      <label for="password">Password</label>
      <InputText id="password" @bind-Value="user.Password" class="form-control" />
      <ValidationMessage For="@(()=>user.Password)" />
   </div>
    <div class="mb3">
      <button type="submit" class="btn btn-primary">Login</button>
    </div>
</EditForm>
<div class="text-danger">
   <span>@errorMessage</span>
</div>

@code {
   private UserLogin  user= new UserLogin();
   private string errorMessage = string.Empty;
   private   async void HandleLogon()
   {
      var result = await AuthService.Login(user);
      if (result.Success)
      {
         errorMessage = string.Empty;

         await LocalStorage.SetItemAsync("authToken", result.Data);

         NavigationManager.NavigateTo( "");
      }
      else
      {
         errorMessage = result.Message;
      }
   }
}
